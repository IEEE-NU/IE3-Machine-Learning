import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squsred_error, r2_score

wine = datasets.load_wine()

# Use only one feature
wine_x = wine.data[:, np.newaxis, 2]

#split into training and testing datasets
wine_x_train = wine_x[:-20]
wine_x_test = wine_x[-20]

wine_y_train = wine.target[:-20]
wine_y_test = wine.target[-20]


#create linear regression object
regr = linear_model.LinearRegression()

#train the linear_model
regr.fit(wine_x_train, wine_y_train)

#make predictions using the training set
wine_y_pred = regr.predict(wine_x_test)

#print coefficients
print('Coefficients: \n', regr.coef_)
print("mean squared error: $.2f" % mean_squared_error(wine_y_test, wine_y_pred))
print('Variance score: %.2f' % r2_score(wine_y_test, wine_y_pred))


plt.scatter(wine_x_test, wine_y_test, color='black')
plt.plot(wine_x_test, wine_y_pred, color='blue', linewidth=3)

plt.xticks(())
plt.yticks(())

plt.show()
